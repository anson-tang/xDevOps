feature_sdt = 'org.scala-ide.sdt.feature'

target(name: 'org.eclim.sdt.classpath'){
  pluginClasspath{
    include(name: 'dropins/**/plugins/org.scala-ide.*.jar')
    include(name: 'dropins/**/plugins/org.scala-lang.*.jar')
    include(name: 'dropins/**/plugins/org.scala-refactoring.*.jar')
    include(name: 'plugins/org.scala-ide.*.jar')
    include(name: 'plugins/org.scala-lang.*.jar')
    include(name: 'plugins/org.scala-refactoring.*.jar')
  }
}

target(name: 'org.eclim.sdt.plugin.compile'){
  taskdef(resource: 'scala/tools/ant/antlib.xml'){
    classpath(refid: 'classpath')
  }

  mkdir(dir: '${build.classes}/org.eclim.sdt')
  scalac(
      srcdir: 'org.eclim.sdt/scala',
      destdir: '${build.classes}/org.eclim.sdt',
      classpathref: 'classpath',
      deprecation: true)
  {
    include(name: '**/*.scala')
    classpath{fileset(dir: '${build.classes}/org.eclim.sdt', includes: 'org.eclim/**')}
    classpath{
      pathelement(path: '${build.classes}/org.eclim.sdt')
      fileset(dir: '${build.plugins}', includes: 'org.eclim*/eclim*.jar')
    }
  }
  copy(todir: '${build.classes}/org.eclim.sdt'){
    fileset(dir: "org.eclim.sdt/scala", includes: "eclim/**", excludes: '**/*.scala')
  }
}

target(name: 'org.eclim.sdt.test'){
  depends('test.init')
  runTests('org.eclim.sdt'){
    createProject('org.eclim.sdt', 'eclim_unit_test_scala')
  }
}
